{"version":3,"sources":["images/password.png","images/finger_print.png","reducers/auth.js","config/dev.js","firebase.js","reducers/user.js","components/Navbar.js","components/LoginForm.js","utils/crypto.js","components/PasswordForm.js","components/HomeContent.js","components/Loading.js","routes/Home.js","routes/Login.js","routes/MyVault.js","routes/Auth.js","routes/AuthRoute.js","global/GlobalStyle.js","App.js","reducers/index.js","index.js"],"names":["module","exports","initialState","authenticated","msp","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","setPersistence","Auth","Persistence","SESSION","auth","dbRef","ref","setUser","user","type","styled","props","className","currentUser","dispatch","useDispatch","to","onClick","e","preventDefault","window","confirm","signOut","then","withRouter","useState","isLoginMode","setIsLoginMode","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isEmailVerified","setIsEmailVerified","isPasswordVerified","setIsPasswordVerified","isConfirmPasswordVerified","setIsConfirmPasswordVerified","loading","setLoading","schema","passwordValidator","is","min","has","not","spaces","onInputChange","target","name","value","validator","isEmail","validate","onSubmit","a","isLoginInputsVerified","isRegisterInputsVerified","signInWithEmailAndPassword","data","history","push","createUserWithEmailAndPassword","alert","message","src","PasswordImage","alt","htmlFor","id","placeholder","onChange","required","style","color","disabled","size","encrypt","input","key","crypto","AES","toString","decrypt","enc","Utf8","useSelector","state","secureButton","useRef","nickname","setNickname","username","setUsername","encrypted","uuid","uuidv4","child","uid","set","isEmpty","useEffect","on","snapshot","val","confirmMsp","mspConfirmed","prompt","createMasterPassword","searchInput","lockData","setLockData","filteredData","setFilteredData","fetchData","once","items","forEach","item","onShow","currentTarget","dataset","lockItem","document","getElementById","showIcon","children","hideIcon","sensitiveData","isShowingData","innerText","getItemById","display","onClose","database","remove","filter","renderFilteredData","map","data-id","filteredLockData","toLowerCase","startsWith","passwordInput","current","focus","FingerPrintImage","decrypted","setTimeout","AuthRoute","Component","component","rest","authRequired","render","createGlobalStyle","App","setIsLoggedIn","isInitialized","setIsInitialized","onAuthStateChanged","exact","path","Home","Login","MyVault","GlobalStyle","combineReducers","action","store","createStore","reducer","composeWithDevTools","ReactDOM"],"mappings":"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","file":"static/js/main.c548d210.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/password.2a000309.png\";","module.exports = __webpack_public_path__ + \"static/media/finger_print.d49ba66e.png\";","export const AUTHENTICATE = \"AUTHENTICATE\";\nexport const DEAUTHENTICATE = \"DEAUTHENTICATE\";\n\nexport const authenticate = msp => ({\n  type: AUTHENTICATE,\n  msp,\n});\nexport const deauthenticate = () => ({\n  type: DEAUTHENTICATE,\n});\n\nconst initialState = {\n  authenticated: false,\n  msp: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return {\n        ...state,\n        authenticated: true,\n        msp: action.msp,\n      };\n    case DEAUTHENTICATE:\n      return {\n        ...state,\n        authenticated: false,\n        msp: \"\",\n      };\n    default:\n      return state;\n  }\n}\n","const firebaseConfig = {\n  apiKey: \"AIzaSyCnSZ7sKc9X98oJMn3rMH-tLFDIlSNyUqk\",\n  authDomain: \"lockey-d41ff.firebaseapp.com\",\n  databaseURL: \"https://lockey-d41ff.firebaseio.com\",\n  projectId: \"lockey-d41ff\",\n  storageBucket: \"lockey-d41ff.appspot.com\",\n  messagingSenderId: \"1071401807862\",\n  appId: \"1:1071401807862:web:425716a2def6c586fbe1d7\",\n};\n\nexport default firebaseConfig;\n","import * as firebase from \"firebase\";\nimport \"firebase/database\";\nimport firebaseConfig from \"./config/dev\";\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\nexport const auth = firebase.auth();\nexport const dbRef = firebase.database().ref();\nexport default firebase;\n","export const SET_USER = \"SET_USER\";\n\nexport const setUser = user => ({\n  type: SET_USER,\n  user,\n});\n\nconst initialState = null;\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return action.user;\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deauthenticate } from \"../reducers/auth\";\nimport firebase, { auth } from \"../firebase\";\nimport { setUser } from \"../reducers/user\";\n\nconst Navbar = props => {\n  const { className } = props;\n  const user = auth.currentUser;\n  const dispatch = useDispatch();\n  const onMyLock = e => {\n    e.preventDefault();\n    //recheck credential\n  };\n  const onLogout = e => {\n    e.preventDefault();\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n      //logout\n      auth.signOut().then(() => {\n        dispatch(setUser(null));\n        dispatch(deauthenticate());\n      });\n    }\n  };\n  return (\n    <nav className={className}>\n      <span className=\"logo\">LOCKEY</span>\n      {user && (\n        <ul className=\"nav-items\">\n          <Link className=\"nav-item btn\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"nav-item btn\" to=\"/myvault\">\n            My Vault\n          </Link>\n          <li className=\"nav-item btn\" onClick={onLogout}>\n            Logout\n          </li>\n        </ul>\n      )}\n    </nav>\n  );\n};\n\nexport default styled(Navbar)`\n  background-color: white;\n  width: 100%;\n  padding: 0.25rem 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 2;\n  .logo {\n    color: #005ce6;\n    font-size: 1em;\n    font-family: \"Monoton\", cursive;\n    user-select: none;\n  }\n\n  .nav-items {\n    display: flex;\n    float: right;\n    .nav-item {\n      color: #005ce6;\n      font-size: 0.7em;\n      font-family: \"Montserrat\", sans-serif;\n      padding: 0.25rem 1rem;\n      border-bottom: 1px solid transparent;\n      transition: all 300ms ease-in-out;\n      &:hover {\n        border-bottom: 1px solid #005ce6;\n      }\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput, { isValidPhoneNumber } from \"react-phone-number-input\";\nimport validator from \"validator\";\nimport passwordValidator from \"password-validator\";\nimport { MdCheckCircle } from \"react-icons/md\";\nimport { ClipLoader } from \"react-spinners\";\nimport firebase from \"../firebase\";\nimport { setUser } from \"../reducers/user\";\nimport PasswordImage from \"../images/password.png\";\n\nconst LoginForm = props => {\n  const { className } = props;\n  const auth = firebase.auth();\n\n  // states\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [isPasswordVerified, setIsPasswordVerified] = useState(false);\n  const [isConfirmPasswordVerified, setIsConfirmPasswordVerified] = useState(\n    false\n  );\n  // const [isOTPVerified, setIsOTPVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n  // refs\n  // const recaptchaContainer = useRef();\n\n  // dispatches\n  const dispatch = useDispatch();\n\n  const schema = new passwordValidator();\n  schema.is().min(8).has().not().spaces();\n\n  // methods\n  // const setupRecaptcha = () =>\n  //   (window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n  //     \"recaptcha-container\",\n  //     {\n  //       callback: function (response) {\n  //         // reCAPTCHA solved, allow signInWithPhoneNumber.\n  //       },\n  //     }\n  //   ));\n  // const onPhoneNumberChange = value => {\n  //   setPhoneNumber(value);\n  // };\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        setIsEmailVerified(validator.isEmail(value));\n        break;\n      case \"password\":\n        setPassword(value);\n        setIsPasswordVerified(schema.validate(value));\n        break;\n      case \"confirm-password\":\n        setConfirmPassword(value);\n        setIsConfirmPasswordVerified(\n          schema.validate(value) && value === password\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  // const onSendCode = e => {\n  //   e.preventDefault();\n  //   if (!isValidPhoneNumber(phoneNumber)) {\n  //     // handle phone number empty error\n  //     return alert(\"Invalid phone number\");\n  //   }\n  //   setupRecaptcha();\n  //   console.log(phoneNumber);\n  //   const appVerifier = window.recaptchaVerifier;\n  //   firebase\n  //     .auth()\n  //     .signInWithPhoneNumber(phoneNumber, appVerifier)\n  //     .then(function (confirmationResult) {\n  //       // SMS sent. Prompt user to type the code from the message, then sign the\n  //       // user in with confirmationResult.confirm(code).\n  //       recaptchaContainer.current.style.display = \"none\";\n  //       window.confirmationResult = confirmationResult;\n  //       const code = window.prompt(\"Enter OTP\");\n  //       confirmationResult\n  //         .confirm(code)\n  //         .then(function (result) {\n  //           // User signed in successfully.\n  //           const user = result.user;\n  //           setIsOTPVerified(true);\n  //         })\n  //         .catch(function (error) {\n  //           // User couldn't sign in (bad verification code?)\n  //           // ...\n  //         });\n  //     })\n  //     .catch(function (error) {\n  //       // Error; SMS not sent\n  //       alert(\n  //         \"You have exceeded the number of SMS verification. Please try again later.\"\n  //       );\n  //       recaptchaContainer.current.style.display = \"none\";\n  //     });\n  // };\n  const onModeChange = e => {\n    setIsLoginMode(!isLoginMode);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    const isLoginInputsVerified = isEmailVerified && isPasswordVerified;\n    const isRegisterInputsVerified =\n      isEmailVerified && isPasswordVerified && isConfirmPasswordVerified;\n    try {\n      let data;\n      setLoading(true);\n      if (isLoginMode) {\n        if (isLoginInputsVerified)\n          data = await auth.signInWithEmailAndPassword(email, password);\n        setLoading(false);\n        dispatch(setUser(data.user));\n        props.history.push(\"/\");\n      } else {\n        if (isRegisterInputsVerified)\n          data = await auth.createUserWithEmailAndPassword(email, password);\n        setLoading(false);\n        alert(\"You are now registered!\");\n        setIsLoginMode(true);\n      }\n    } catch (e) {\n      setLoading(false);\n      alert(e.message);\n    }\n  };\n  return (\n    <div className={className}>\n      <form className=\"login-form\" onSubmit={onSubmit}>\n        <img className=\"password-image\" src={PasswordImage} alt=\"password_image\" />\n        <h2 className=\"login-msg\">{isLoginMode ? \"Login\" : \"Register\"}</h2>\n        <label htmlFor=\"login-email-input\">EMAIL</label>\n        <div className=\"input-row\">\n          <input\n            id=\"login-email-input\"\n            className=\"text-input\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"EMAIL\"\n            value={email}\n            onChange={onInputChange}\n            required\n          />\n          <MdCheckCircle\n            className=\"check-icon\"\n            style={{ color: isEmailVerified ? \"#28a745\" : \"lightgray\" }}\n          />\n        </div>\n        <label htmlFor=\"login-password-input\">PASSWORD</label>\n        <div className=\"input-row\">\n          <input\n            id=\"login-password-input\"\n            className=\"text-input\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"PASSWORD (AT LEAST 8 CHARACTERS)\"\n            value={password}\n            onChange={onInputChange}\n            required\n          />\n          <MdCheckCircle\n            className=\"check-icon\"\n            style={{ color: isPasswordVerified ? \"#28a745\" : \"lightgray\" }}\n          />\n        </div>\n        {!isLoginMode && (\n          <div className=\"register-inputs\">\n            <label htmlFor=\"confirm-password-input\">CONFIRM PASSWORD</label>\n            <div className=\"input-row\">\n              <input\n                id=\"confirm-password-input\"\n                className=\"text-input\"\n                name=\"confirm-password\"\n                type=\"password\"\n                placeholder=\"CONFIRM PASSWORD\"\n                value={confirmPassword}\n                onChange={onInputChange}\n                required\n              />\n              <MdCheckCircle\n                className=\"check-icon\"\n                style={{\n                  color: isConfirmPasswordVerified ? \"#28a745\" : \"lightgray\",\n                }}\n              />\n            </div>\n            {/* <label htmlFor=\"phone-number-input\">PHONE NUMBER</label>\n            <div className=\"input-row\">\n              <PhoneInput\n                id=\"phone-number-input\"\n                className=\"text-input phone-number-input\"\n                placeholder=\"PHONE NUMBER\"\n                defaultCountry=\"US\"\n                limitMaxLength={true}\n                value={phoneNumber}\n                onChange={onPhoneNumberChange}\n              />\n              <MdCheckCircle\n                className=\"check-icon\"\n                style={{ color: isOTPVerified ? \"#28a745\" : \"lightgray\" }}\n              />\n            </div>\n            <span\n              className={`send-code ${!isOTPVerified && \"btn\"}`}\n              onClick={onSendCode}\n            >\n              {isOTPVerified ? \"Verified!\" : \"Send Code\"}\n            </span>\n            <div id=\"recaptcha-container\" ref={recaptchaContainer} /> */}\n          </div>\n        )}\n        <button\n          type=\"submit\"\n          className=\"login-btn btn\"\n          disabled={\n            isLoginMode\n              ? !isEmailVerified || !isPasswordVerified\n              : !isEmailVerified ||\n                !isPasswordVerified ||\n                !isConfirmPasswordVerified\n          }\n        >\n          {loading ? (\n            <ClipLoader size=\"0.8em\" color=\"white\" />\n          ) : isLoginMode ? (\n            \"Login\"\n          ) : (\n            \"Register\"\n          )}\n        </button>\n        <div className=\"btm-container\">\n          <span className=\"register-label\">\n            {isLoginMode ? \"Not registered?\" : \"Already registered?\"}\n          </span>\n          <span className=\"register-btn btn\" onClick={onModeChange}>\n            {isLoginMode ? \"Register Now\" : \"Back to Login\"}\n          </span>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default styled(withRouter(LoginForm))`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  display: flex;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  max-width: 40rem;\n  background-color: white;\n  box-shadow: 0 0 2rem rgba(0, 0, 0, 0.1);\n  .password-image {\n    width: 15rem;\n    user-select: none;\n  }\n  .login-form {\n    flex: 3;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 4rem 2rem;\n    font-family: \"Montserrat\", sans-serif;\n    .login-msg {\n      font-size: 1.5em;\n      font-weight: bold;\n      user-select: none;\n      color: #005ce6;\n      margin: 0 auto 1rem auto;\n      text-align: center;\n    }\n    label {\n      width: 100%;\n      font-size: 0.7em;\n      margin-bottom: 0.5rem;\n      user-select: none;\n    }\n    .input-row {\n      width: 100%;\n      display: flex;\n      .text-input {\n        width: 100%;\n        font-size: 0.7em;\n        padding: 0.5rem;\n        margin-bottom: 1rem;\n        border: none;\n        border-bottom: 1px solid lightgray;\n        &:last-child {\n          margin-bottom: 0;\n        }\n        &:focus {\n          outline: none;\n        }\n      }\n      .check-icon {\n        position: relative;\n        font-size: 1.2em;\n        right: 1.5rem;\n        color: #28a745;\n      }\n    }\n    .register-inputs {\n      width: 100%;\n      .phone-number-input {\n        input {\n          border: none;\n          margin-left: 0.5rem;\n          &:focus {\n            outline: none;\n          }\n        }\n      }\n      .send-code {\n        display: inline-block;\n        margin-bottom: 0.5rem;\n        font-size: 0.8em;\n        color: #009fb7;\n      }\n    }\n    .login-btn {\n      width: 100%;\n      padding: 0.5rem;\n      font-size: 0.7em;\n      border: none;\n      border-radius: 0.125rem;\n      background-color: #005ce6;\n      color: white;\n      margin-top: 2rem;\n      font-family: \"Montserrat\", sans-serif;\n\n      &:disabled {\n        background-color: gray;\n        &:hover {\n          cursor: not-allowed;\n        }\n      }\n    }\n    .btm-container {\n      display: flex;\n      justify-content: center;\n      padding: 1rem;\n      .register-label {\n        color: gray;\n        font-size: 0.7em;\n        user-select: none;\n      }\n      .register-btn {\n        margin-left: 1rem;\n        color: #005ce6;\n        user-select: none;\n        font-size: 0.7em;\n\n        &:hover {\n          font-weight: bold;\n        }\n      }\n    }\n  }\n`;\n","import crypto from \"crypto-js\";\n\nexport const encrypt = (input, key) => {\n  const encrypted = crypto.AES.encrypt(input, key).toString();\n  return encrypted;\n};\nexport const decrypt = (input, key) => {\n  const decrypted = crypto.AES.decrypt(input, key);\n  const text = decrypted.toString(crypto.enc.Utf8);\n  return text;\n};\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport crypto from \"crypto-js\";\nimport { BsShieldLock } from \"react-icons/bs\";\nimport { ClipLoader } from \"react-spinners\";\nimport { auth, dbRef } from \"../firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { encrypt, decrypt } from \"../utils/crypto\";\nimport isEmpty from \"is-empty\";\n\nconst PasswordForm = props => {\n  const { className } = props;\n  const msp = useSelector(state => state.auth.msp);\n  const user = auth.currentUser;\n  const secureButton = useRef();\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"nickname\":\n        setNickname(value);\n        break;\n      case \"username\":\n        setUsername(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const resetInputs = () => {\n    setNickname(\"\");\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    let encrypted;\n    encrypted = {\n      uuid: uuidv4(),\n      nickname: encrypt(nickname, msp),\n      username: encrypt(username, msp),\n      password: encrypt(password, msp),\n    };\n\n    //Submit\n    dbRef.child(user.uid).child(\"locks\").child(encrypted.uuid).set(encrypted);\n    resetInputs();\n    alert(\"Successfully stored to your lock!\");\n  };\n  return (\n    <div className={className}>\n      <form className=\"password-form\" onSubmit={onSubmit}>\n        <label htmlFor=\"private-email-input\">\n          NICKNAME (GOOGLE, YOUTUBE, FACEBOOK, etc.)\n        </label>\n        <input\n          id=\"private-nickname-input\"\n          className=\"text-input\"\n          type=\"text\"\n          name=\"nickname\"\n          placeholder=\"NICKNAME\"\n          onChange={onInputChange}\n          value={nickname}\n          required\n        />\n        <label htmlFor=\"private-email-input\">USERNAME</label>\n        <input\n          id=\"private-username-input\"\n          className=\"text-input\"\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"USERNAME\"\n          onChange={onInputChange}\n          value={username}\n          required\n        />\n        <label htmlFor=\"private-password-input\">PASSWORD</label>\n        <input\n          id=\"private-password-input\"\n          className=\"text-input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"PASSWORD\"\n          onChange={onInputChange}\n          value={password}\n          required\n        />\n        <button\n          className=\"secure-btn btn\"\n          type=\"submit\"\n          ref={secureButton}\n          disabled={isEmpty(nickname) || isEmpty(username) || isEmpty(password)}\n        >\n          <span className=\"secure-text\">Save</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default styled(PasswordForm)`\n  position: relative;\n  font-family: \"Montserrat\", sans-serif;\n  .password-form {\n    position: relative;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, 50%);\n    width: 70%;\n    max-width: 40rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    label {\n      width: 100%;\n      font-size: 0.7em;\n      margin-bottom: 0.5rem;\n    }\n    .text-input {\n      width: 100%;\n      font-size: 0.7em;\n      padding: 0.5rem;\n      margin-bottom: 1rem;\n      border: none;\n      border-bottom: 1px solid lightgray;\n      &:last-child {\n        margin-bottom: 0;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    .secure-btn {\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 0.5rem;\n      font-size: 0.8em;\n      border: none;\n      border-radius: 0.125rem;\n      background-color: #005ce6;\n      color: white;\n      margin-top: 1rem;\n      font-family: \"Montserrat\", sans-serif;\n\n      &:disabled {\n        background-color: gray;\n        &:hover {\n          cursor: not-allowed;\n        }\n      }\n      .converting-text {\n        margin-left: 0.5rem;\n        font-size: 0.8em;\n      }\n      .secure-icon {\n        color: white;\n        margin-right: 0.25rem;\n      }\n      .secure-text {\n        font-size: 0.8em;\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport passwordValidator from \"password-validator\";\nimport PasswordForm from \"./PasswordForm\";\nimport { auth, dbRef } from \"../firebase\";\nimport { encrypt, decrypt } from \"../utils/crypto\";\nconst HomeContent = props => {\n  const { className } = props;\n  const user = auth.currentUser;\n  const [masterPassword, setMasterPassword] = useState(\"\");\n\n  const schema = new passwordValidator();\n  schema.is().min(8).has().not().spaces();\n  const createMasterPassword = () => {\n    let msp = null;\n    let confirmMsp = null;\n    let mspConfirmed = false;\n    while (!mspConfirmed) {\n      while (msp === null) {\n        msp = prompt(\n          \"You don't have a master password set. Please type in new master password (at least 8 characters):\"\n        );\n        if (!schema.validate(msp)) msp = null;\n      }\n      confirmMsp = prompt(\"Please re-enter your master password to confirm:\");\n      if (confirmMsp === null) {\n        msp = null;\n      } else if (confirmMsp === msp) mspConfirmed = true;\n    }\n\n    // Save Master Password\n    dbRef.child(user.uid).child(\"msp\").set(encrypt(msp, msp));\n  };\n  useEffect(() => {\n    if (user) {\n      dbRef\n        .child(user.uid)\n        .child(\"msp\")\n        .on(\"value\", snapshot => {\n          if (snapshot.val() === null) {\n            // Prompt Master Password\n            createMasterPassword();\n          }\n        });\n    }\n  }, []);\n  return (\n    <div className={className}>\n      <PasswordForm />\n    </div>\n  );\n};\n\nexport default styled(HomeContent)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Loading = props => {\n  const { className } = props;\n\n  return <div className={className}>Loading</div>;\n};\n\nexport default styled(Loading)``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { HomeContent } from \"../components\";\n\nconst Home = props => {\n  const { className } = props;\n\n  return (\n    <div className={className}>\n      <HomeContent />\n    </div>\n  );\n};\n\nexport default styled(Home)``;\n\n/*\n  If a master password is not set up, prompt the user to create one.\n  Otherwise, ask for the master password\n  \n\n*/\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { LoginForm } from \"../components\";\nconst Login = props => {\n  const { className } = props;\n  return (\n    <div className={className}>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default styled(Login)`\n  background-color: #f5f5f7;\n  width: 100%;\n  height: 100vh;\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { reauthenticate, deauthenticate } from \"../reducers/auth\";\nimport firebase, { auth, dbRef } from \"../firebase\";\nimport { decrypt } from \"../utils/crypto\";\nimport { BiShow, BiHide } from \"react-icons/bi\";\nimport { MdClose } from \"react-icons/md\";\n\nconst MyVault = props => {\n  const { className } = props;\n  const user = auth.currentUser;\n  const msp = useSelector(state => state.auth.msp);\n  const authenticated = useSelector(state => state.auth.authenticated);\n  const searchInput = useRef();\n  const [lockData, setLockData] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const secureText = \"●●●●●●●●●●\";\n  const fetchData = () => {\n    if (user) {\n      dbRef\n        .child(user.uid)\n        .child(\"locks\")\n        .once(\"value\", snapshot => {\n          let items = [];\n          if (snapshot) {\n            snapshot.forEach(item => {\n              items.push({\n                uuid: item.val().uuid,\n                nickname: decrypt(item.val().nickname, msp),\n                username: decrypt(item.val().username, msp),\n                password: decrypt(item.val().password, msp),\n              });\n            });\n          }\n          setLockData(items);\n          setFilteredData(items);\n        });\n    }\n  };\n  const onShow = e => {\n    const { id } = e.currentTarget.dataset;\n    const lockItem = document.getElementById(`${id}-item`);\n    const showIcon = lockItem.children[0].children[1].children[0];\n    const hideIcon = lockItem.children[0].children[1].children[1];\n    const sensitiveData = lockItem.children[1];\n    const isShowingData = e.currentTarget.id === `${id}-show`;\n    sensitiveData.children[0].innerText = isShowingData\n      ? getItemById(id).username\n      : secureText;\n    sensitiveData.children[1].innerText = isShowingData\n      ? getItemById(id).password\n      : secureText;\n    showIcon.style.display = isShowingData ? \"none\" : \"inline\";\n    hideIcon.style.display = isShowingData ? \"inline\" : \"none\";\n  };\n  const onClose = e => {\n    const { id } = e.currentTarget.dataset;\n    const item = getItemById(id);\n    const { nickname } = item;\n    if (\n      window.confirm(\n        `Are you sure you want to delete ${nickname} from your vault?`\n      )\n    ) {\n      firebase\n        .database()\n        .ref(`${user.uid}/locks/${id}`)\n        .remove()\n        .then(() => fetchData());\n    } else {\n    }\n  };\n  const getItemById = id => {\n    const items = lockData.filter(item => item.uuid === id);\n    return items[0];\n  };\n  const onInputChange = e => {\n    const filteredLockData = lockData.filter(item =>\n      item.nickname.toLowerCase().startsWith(e.target.value.toLowerCase())\n    );\n    setFilteredData(filteredLockData);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const renderFilteredData = filteredData && (\n    <ul className=\"lock-list\">\n      {filteredData.map(\n        item =>\n          item.uuid && (\n            <li\n              key={item.uuid}\n              id={`${item.uuid}-item`}\n              className=\"lock-item shadow\"\n            >\n              <div className=\"top-container\">\n                <h3 className=\"lock-nickname\">{item.nickname}</h3>\n                <div className=\"icons\">\n                  <BiShow\n                    className=\"btn\"\n                    id={`${item.uuid}-show`}\n                    data-id={item.uuid}\n                    onClick={onShow}\n                  />\n                  <BiHide\n                    className=\"btn\"\n                    id={`${item.uuid}-hide`}\n                    data-id={item.uuid}\n                    style={{ display: \"none\" }}\n                    onClick={onShow}\n                  />\n                  <MdClose\n                    className=\"close-btn btn\"\n                    id={`${item.uuid}-close`}\n                    data-id={item.uuid}\n                    onClick={onClose}\n                  />\n                </div>\n              </div>\n              <ul className=\"sensitive-data\">\n                <span>{secureText}</span>\n                <span>{secureText}</span>\n              </ul>\n            </li>\n          )\n      )}\n    </ul>\n  );\n\n  return authenticated ? (\n    <div className={className}>\n      <form className=\"search-form\">\n        <input\n          type=\"text\"\n          placeholder=\"SEARCH\"\n          onChange={onInputChange}\n          ref={searchInput}\n        />\n      </form>\n      {renderFilteredData}\n    </div>\n  ) : null;\n};\n\nexport default styled(MyVault)`\n  padding: 1rem;\n  width: 80%;\n  max-width: 40rem;\n  margin: auto;\n  font-family: \"Montserrat\", sans-serif;\n  .search-form {\n    width: 100%;\n    input {\n      width: 100%;\n      font-size: 0.7em;\n      padding: 0.5rem;\n    }\n  }\n  .lock-list {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    .lock-item {\n      width: calc(50% - 1rem);\n      margin-right: 1rem;\n      margin-bottom: 1rem;\n      background-color: #f5f5f7;\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 0.5rem;\n      border-radius: 0.125rem;\n      overflow: hidden;\n      &:nth-child(even) {\n        width: 50%;\n        margin-right: 0;\n      }\n      .top-container {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        background-color: #005ce6;\n        color: white;\n        padding: 0.25rem 0.25rem 0.25rem 0.5rem;\n        .lock-nickname {\n          font-size: 0.7em;\n          font-weight: lighter;\n        }\n        .icons {\n          position: relative;\n          top: 0.125rem;\n          font-size: 0.8em;\n          .close-btn {\n            margin-left: 0.125rem;\n          }\n        }\n      }\n      .sensitive-data {\n        display: flex;\n        flex-direction: column;\n        padding: 0.5rem;\n        span {\n          color: gray;\n          font-size: 0.7em;\n          margin-bottom: 0.25rem;\n          &:last-child {\n            margin-bottom: 0;\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { authenticate, deauthenticate } from \"../reducers/auth\";\nimport { useDispatch } from \"react-redux\";\nimport firebase, { auth, dbRef } from \"../firebase\";\nimport { decrypt } from \"../utils/crypto\";\nimport { AiOutlineLogin } from \"react-icons/ai\";\nimport FingerPrintImage from \"../images/finger_print.png\";\n\nconst Auth = props => {\n  const { className } = props;\n  const [password, setPassword] = useState(\"\");\n  const user = auth.currentUser;\n  const passwordInput = useRef();\n  const dispatch = useDispatch();\n  const onInputChange = e => {\n    setPassword(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if (password != null) {\n      dbRef\n        .child(user.uid)\n        .child(\"msp\")\n        .on(\"value\", snapshot => {\n          const decrypted = decrypt(snapshot.val(), password);\n          if (password === decrypted) {\n            dispatch(authenticate(password));\n            setTimeout(() => {\n              dispatch(deauthenticate());\n            }, 60000);\n          } else {\n            alert(\"You are not authenticated.\");\n            dispatch(deauthenticate());\n          }\n        });\n    }\n  };\n  useEffect(() => {\n    passwordInput.current.focus();\n  }, []);\n  return (\n    <div className={className}>\n      <img\n        className=\"finger-print-image\"\n        src={FingerPrintImage}\n        alt=\"finger_print_image\"\n      />\n      <form className=\"auth-form\" onSubmit={onSubmit}>\n        <input\n          className=\"text-input\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"MASTER PASSWORD\"\n          value={password}\n          onChange={onInputChange}\n          ref={passwordInput}\n          required\n        />\n        <button type=\"submit\" className=\"login-btn btn\">\n          <AiOutlineLogin className=\"login-icon\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default styled(Auth)`\n  .finger-print-image {\n    width: 50%;\n    max-width: 20rem;\n    display: block;\n    margin: auto;\n    margin-top: 2rem;\n  }\n  .auth-form {\n    position: relative;\n    width: 50%;\n    margin: auto;\n    margin-top: 2rem;\n    .text-input {\n      width: 100%;\n      font-size: 0.7em;\n      padding: 0.5rem;\n      padding-right: 2rem;\n      margin-bottom: 1rem;\n      border: none;\n      border-bottom: 1px solid lightgray;\n      &:last-child {\n        margin-bottom: 0;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    .login-btn {\n      position: absolute;\n      top: 0.25rem;\n      right: 0;\n      color: #005ce6;\n      background-color: transparent;\n      border: none;\n      font-size: 1.2em;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport passwordValidator from \"password-validator\";\nimport { setUser } from \"../reducers/user\";\nimport { authenticate, deauthenticate } from \"../reducers/auth\";\nimport firebase, { auth, dbRef } from \"../firebase\";\nimport { encrypt, decrypt } from \"../utils/crypto\";\nimport Auth from \"./Auth\";\n\nconst AuthRoute = ({ component: Component, authRequired, ...rest }) => {\n  const authenticated = useSelector(state => state.auth.authenticated);\n  const schema = new passwordValidator();\n  schema.is().min(8).has().not().spaces();\n  const user = auth.currentUser;\n\n  const createMasterPassword = () => {\n    let msp = null;\n    let confirmMsp = null;\n    let mspConfirmed = false;\n    while (!mspConfirmed) {\n      while (msp === null) {\n        msp = prompt(\n          \"You don't have a master password set. Please type in new master password (at least 8 characters):\"\n        );\n        if (!schema.validate(msp)) msp = null;\n      }\n      confirmMsp = prompt(\"Please re-enter your master password to confirm:\");\n      if (confirmMsp === null) {\n        msp = null;\n      } else if (confirmMsp === msp) mspConfirmed = true;\n    }\n\n    // Save Master Password\n    dbRef.child(user.uid).child(\"msp\").set(encrypt(msp, msp));\n  };\n  useEffect(() => {\n    if (user) {\n      dbRef\n        .child(user.uid)\n        .child(\"msp\")\n        .on(\"value\", snapshot => {\n          if (snapshot.val() === null) {\n            // Prompt Master Password\n            createMasterPassword();\n          }\n        });\n    }\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.currentUser ? (\n          authenticated ? (\n            <Component {...props} />\n          ) : (\n            <Auth />\n          )\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default AuthRoute;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n  ul {\n    list-style: none;\n    user-select: none;\n  }\n  a {\n    text-decoration: none;\n    color: black;\n  }\n  .section-header {\n    font-size: 2em;\n    font-weight: lighter;\n    text-align: center;\n  }\n  .btn {\n    &:hover {\n        cursor: pointer;\n    }\n  }\n  .shadow {\n    box-shadow: 0.125rem 0.125rem 0.5rem rgba(0, 0, 0, 0.2); \n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"./components\";\nimport { Home, Login, MyVault, PrivateRoute, AuthRoute, Auth } from \"./routes\";\nimport { GlobalStyle } from \"./global\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUser(user);\n      } else setIsLoggedIn(false);\n      setIsInitialized(true);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      {isInitialized ? (\n        <Router>\n          <Navbar />\n          <Switch>\n            <AuthRoute exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <AuthRoute exact path=\"/myvault\" component={MyVault} />\n          </Switch>\n          <GlobalStyle />\n        </Router>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport auth from \"./auth\";\n\nexport default combineReducers({\n  user,\n  auth,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}